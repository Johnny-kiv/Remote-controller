#!/usr/bin/python3
import os
from aiogram import Bot, Dispatcher, executor, types
from config import bot_token, admin
import murkup as nav

bot = Bot(token=bot_token)
dp = Dispatcher(bot)
os.system("amixer -c 0 set Master 80%")
v = 80

@dp.message_handler(commands=['start'])
async def command_start():
    await bot.send_message(admin, "–ü—Ä–∏–≤–µ—Ç!", reply_markup=nav.mainMenu)


@dp.message_handler()
async def bot_message(message: types.Message):
    global v
    if message.text == "‚ûï":
        v += 2
        os.system(f"amixer -c 0 set Master {v}%")
        await bot.send_message(message.from_user.id, f"–ì—Ä–æ–º–∫–æ—Å—Ç—å: {v}%", reply_markup=nav.mainMenu)
    if message.text == "‚ûñ":
        v -= 2
        os.system(f"amixer -c 0 set Master {v}%")
        await bot.send_message(message.from_user.id, f"–ì—Ä–æ–º–∫–æ—Å—Ç—å: {v}%", reply_markup=nav.mainMenu)
    if message.text == "‚è©":
        os.system("dbus-send --print-reply --dest=org.mpris.MediaPlayer2.vlc /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Seek int64:10000000")
    if message.text == "‚è™":
        os.system("dbus-send --print-reply --dest=org.mpris.MediaPlayer2.vlc /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Seek int30:10000000")
    if message.text == "‚ÜïÔ∏è":
        os.system("dbus-send --print-reply --dest=org.mpris.MediaPlayer2.vlc /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.fullscreen")
    if message.text == "–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º":
        await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–µ—Ç–µ —Ñ–∏–ª—å–º", reply_markup=nav.choiceMenu)
    if message.text == "‚èØ":
        os.system("qdbus org.mpris.MediaPlayer2.vlc /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause")
        await bot.send_message(message.from_user.id, "–§–∏–ª—å–º –ª–∏–±–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ª–∏–±–æ –≤–∫–ª—é—á–µ–Ω.", reply_markup=nav.mainMenu)

#–í–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞
@dp.callback_query_handler(text_contains="/")
async def open_m(call: types.CallbackQuery):
    os.system(f"xdg-open <–í–∞—à–∞ –ø–∞–ø–∫–∞>{call.data}")
    await bot.send_message(call.from_user.id, "–§–∏–ª—å–º –≤–∫–ª—é—á–µ–Ω. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞! üôÇ", reply_markup=nav.mainMenu)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)